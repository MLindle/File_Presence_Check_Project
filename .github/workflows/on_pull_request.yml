name: File_Presence_Check_on_PR

on:
    pull_request:
        branches: ["main"]

jobs:
# Run unit tests
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - name: Run unit tests
        run: |
          python -m pip install --upgrade pip pytest requests
          pytest -q
# After unit tests, run file validation job

  file_validation_job:
        needs: tests
        name: File Validation and CloudWatch Logging
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v5
    
# Run the file presence checker

            - name: Run_file_presence_checker
              id: file_check
              run: python check_required_files.py

# Configure AWS credentials

            - name: AWS Credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                aws-access-key-id:      ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key:  ${{ secrets.AWS_SECRET_ACCESS_KEY}}
                aws-region:             ${{ secrets.AWS_REGION }}

# Check if log group exists, create if it doesn't. Output will be sent to dev/null if resource already exists.

            - name: Check or create log group
              run:  aws logs create-log-group --log-group-name "${{ secrets.LOG_GROUP_NAME_BETA }}" 2>/dev/null || true

# Assign a name to this log stream using UTC timestamp

            - name: Create log stream name
              run: echo "STREAM_NAME=$(date -u +%Y%m%dT%H%M%SZ)" >> "$GITHUB_ENV"

# Create the stream and push log values

            - name: Create stream and push logs
              run: |
                aws logs create-log-stream \
                  --log-group-name "${{ secrets.LOG_GROUP_NAME_BETA }}" \
                  --log-stream-name "$STREAM_NAME" || true

                # CloudWatch event timestamp in ms
                TS=$(($(date -u +%s)*1000))

                # Turn arrays into plain text
                MISSING='${{ join(fromJSON(steps.file_check.outputs.missing_files_output), ' , ') }}'
                REQUIRED='${{ join(fromJSON(steps.file_check.outputs.required_files_output), ' , ') }}'

                aws logs put-log-events \
                  --log-group-name "${{ secrets.LOG_GROUP_NAME_BETA }}" \
                  --log-stream-name "$STREAM_NAME" \
                  --log-events '[{"timestamp": '"$TS"', "message": "Workflow='"$GITHUB_WORKFLOW"' SHA='"$GITHUB_SHA"' Actor='"$GITHUB_ACTOR"' RunID='"$GITHUB_RUN_ID"' Job='"$GITHUB_JOB"' Repo='"$GITHUB_REPOSITORY"' Branch='"$GITHUB_REF_NAME"' Event='"$GITHUB_EVENT_NAME"' Missing_Files='"$MISSING"' Files_Found='"$REQUIRED"'"}]'

